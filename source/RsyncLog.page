Menu="EasyRsync:3"
Title="Rsync Log"
---
<?PHP
$plugin = 'easy.rsync';

// Set document root for Unraid environment.
$docroot = $docroot ?? $_SERVER['DOCUMENT_ROOT'] ?: '/usr/local/emhttp';
// Include Unraid's GUI helper functions.
require_once "$docroot/webGui/include/Translations.php";
require_once "$docroot/webGui/include/Helpers.php";

require_once __DIR__ ."/include/ERSettings.php";

use unraid\plugins\EasyRsync\ERSettings;
?>

<h3>The backup is <span id="backupStatusText" class=""></span>.</h3>
<div style='border: 1px solid red; height:500px; overflow:auto;' id='logFrame'>Loading...</div>
<input type='button' id="abortBtn" value='Abort' disabled/>
<p id="didContainer" style="display: none; width: 200px;">Your debug log ID: <input type="text" id="did" onmouseover="$(this).select()"/></p>

<script>
    const url = "/plugins/<?= ERSettings::$appName ?>/include/HttpHelper.php";

    document.addEventListener("DOMContentLoaded", function () {
        setInterval(checkBackup, 1000);

        const abortBtn = document.getElementById('abortBtn');
        abortBtn.addEventListener('click', function () {
            if (confirm("Are you sure you want to abort?")) {
                fetch(url, { method: 'POST', body: new URLSearchParams({ action: 'abort' }) })
                    .catch(error => console.error('Error:', error));
            }
        });

        function checkBackup() {
            fetch(url, { method: 'POST', body: new URLSearchParams({ action: 'getBackupState' }) })
                .then(response => response.json())
                .then(data => {
                    const logDiv = document.getElementById('logFrame');
                    if (data.log === "") {
                        logDiv.textContent = "The log is not existing or empty";
                    } else {
                        logDiv.textContent = data.log;
                    }

                    const backupStatusText = document.getElementById('backupStatusText');
                    if (data.running) {
                        backupStatusText.className = 'backupRunning';
                        abortBtn.disabled = false;
                    } else {
                        backupStatusText.className = 'backupNotRunning';
                        abortBtn.disabled = true;
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    document.getElementById('logFrame').textContent = "Something went wrong while talking to the backend :(";
                });
        }
    });

</script>